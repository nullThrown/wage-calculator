NOTES 

  Server  
    
  TODO 
    *finish calc data obj and attach to all get requests
    *move virtual functions into middleware functions

    *create $grouping of shift data     
    *look at business folder & clean it up 
    Entries Routes
      look at $group to separate entries subdocs

    POST
      ✔- POST - create new earning's entry
      ✔- POST - update earning's entry
      
    GET

      - GET - overview data
        -entries => calc data

      - GET - data by specific month
        -entries => calc data 

      - GET - entries & data by specific week and 3 weeks prior 
        -entries => entries + calc data
      
      - GET - shift data 
        returned groupings:
          by day - 7 groups: entries grouped only by day mon, tues, wed ...
            structure: 
              const byDayData = [
                  {
                    day: 'Sunday',
                    avgPerHour: 0,
                  }, ...

          by company & day - 7*numOfCompany entries grouped first by company & then by day 
            structure: 
              const byCompany = [
                  {
                    companyName: 'Iron Cactus',
                    day: [
                      {
                       day: 'sunday',
                       avgPerHour: 0, 
                      }
                      {
                       day: 'monday',
                       avgPerHour: 0, 
                      }
                    ]...
                   



    *new folder name for business    
    *business logic needs to be cleaned up
      -many of these files are useless 
      -better names to be applied to factory functions 
    *data needs to be derived for best shift
  
  React 
    *clean up components folder 
    *add config for axios & react-query 
    *look into features folder in bulletproof React 
      -try to map the functionality from there onto this project 
    *try to map react-query axios calls onto backend API   
    *add providers into separate file 
    