    Todo 
    *have auth hook return user object and store it in react query 
      *add title to filter select component -- make it a little more UX friendly
    * populate filter with relevant companies
    * change backend API endpoints to take in company name string as opposed to companyID
    *combine week & single entry into single component 
    *have week component populated with real data 
      - week of select 
      - date boxes
    *date boxes -- make Vstack on lower screen width  
    *populate single entry with latest date 
    * brainstorm how to populate single entry upon date clicked
    
    STATE/CACHE DATA
      ✔*add state variable to company filter select - filters for 'all', 'active', and single company  
        -pass state down as prop to all relevant components

      *add mutation to add Entry form
      *add react query hooks to all components 
        -pass filter as one of react-query call dependendies
        -overview
        -day
        -week
        -month
      
      *select element still needs to be populated from user react-q cache property 
      
    GENERAL
      *place providers into separate folder
      *titles should be smaller and have less weight
        -title text should be a child not a prop
      *create landing page

    COMPANY SELECT
        -company display still needs to return the filtered results of the company select state
        -company display table will need to have a horizontal scroll -- common with tables!!
      

    WEEK 
        *clicked entry will populate single entry container
        *add previous option to select 
          -previous option will make API call for previous weeks  

    MONTH      
      *will need month selector 
        -take this hook and component from budget app 
      *otherwise just a section for meta data about a given month 
        -total earned 
        -total earned per hour
        -wages earned
        -hours worked 
        -tips earned 
        -credit tips 
        -cash tips 
    SHIFT 
      *will need to be figured out in the future 

    BACK BURNER  
      *extend theme for size prop




NEW NOTES AFTER HIATUS
read: previous notes, while mostly imcomprehensible, will stay up 
new notes will be added and new to do items will be created from bottom-up



GENERAL 
*currently selected company needs to be saved on user model
*rename folder features/companySelect -> company
-place all company related components/api calls/hooks into here
-rename all company query keys to ['company', 'bla']
*add a services folder (path: src/services) to handle plain JavaScript modules (e.g., localStorage.js )
- add initial state objects here 

*
problem: find all use queries
-separate into custom hooks
-create unique and useful query keys  
-handle loading/error logic 
-tag which ones need to be invalidated and based on what

*queries
-useAuth - gets user - App 
✔-getCompanies - registration/addCompany, editCompany, deleteCompany
-create separate API call to get companies
✔-getOverview - Overview
-getEntries - Day, Week (entries component has single query fn, however, 
it would be best to separate these calls into two separate ones and have separate data for each component)

*********start here*********

Day
-create get entries route for Day component 
-create custom hook to get entries
-place custom hook in Day component
Week
-create get entriesByWeek route for Week component(already exists?) 
-create custom hook to get entries by Week
-place custom hook in Week component

-getMonth - Month
-getShift - Shift (has not been created yet)
*
problem:  create generic react-query error handler
  
*
problem: find all 'something went wrong error message" and replace with component 

*
problem: DefaultText component should be modifed by the chakra ui extend themes section 
There is no reason to have a separate component for that.

*
problem: entry items coming from API need to have both a company Id as well as a company name
solution: mongoose join (populate) method 

*
problem: create format time util function that converts time from a decimal into a hours + minutes worked

*
problem: useAddCompanyVal.js file (path: features/auth/hooks) should be placed in user/hooks/validation folder

*
problem: useAddSignupVal.js file (path: features/auth/hooks) should be placed in user/hooks/validation folder

*
problem: validation hooks must be complete word 'val' -> 'validation' otherwise to confusing. Could mean value. 

*
problem: either have inputs be a separate component or individual for each

*
problem: axios stringify & node server convert request body date times into different timezone 
many date times need to reflect local time zones. 
solution: create system that preserves local time zones. 



ADD COMPANY 
*
problem: features/user/components/registration/addCompany - FinishInfo Modal should be created
as a separate modal in the components folder

*
problem: styles: not enough margin on top of component

*
problem: inputs take up too much horizontal space within form component

*
problem: more space required between inputs 

*
problem: company list initial data should be pulled from DB not created locally 
what if user reloads page? or steps away for a while?

*
problem: Edit Company and Cancel buttons are not inline

*
problem: 'are you sure you want to continue' modal bugs out. Something is wrong with the chakra ui modal 

*
problem: add company on ProfileCreation page should have option to permanently set totalSalesApplicable = false/true


HOME

*
problem: All API calls on the home page should produce one loading state 
if any one API call fails, the entire page should render 'something went wrong' component


ADD ENTRY

*
problem: company switch (company select) does not effect Total Sales Applicable value

*
problem: if totalSalesApplicable = false, disable Total Sales input   

*
problem: tooltips should be added to confusing inputs
-total sales "the amount sold.. helps us determine a tip percentage."
-total Sales Applicable "if the amount that you sold is known, check the box." 
-special event "party, banquet, etc. This allows us to determine earnings on both regular and special shifts."  

*
problem: combine handlers into single fn

*
problem: on success after add entry needs to produce success icon as well as oppurtunity to 
add another entry or close 

*
problem:
Add entry arrow symbol needs to flip upon button press


*
problem: Total Sales Applicable value needs to change upon CompanySelect value as well as manual control


EDIT ENTRY
*
  Problem: Edit Entry (within Add Entry form) fill button does not work 
  Desc: fill button click does not populate form with proper date, does not close modal
  Solution: Unsure

*
  Problem: Edit Entry modal overlay does not close upon fill,cancel (btn), X(btn), esc(key press), click off 
  Solution: find reddit comment from previously asked question


*
Problem: Add Entry function does not create all fields specified in Entry model 
Solution: rework Add Entry function 

*
Problem: Add Entry function - company select - needs to be or point towards an object id 
of that specific company or position
Solution: match company id and position to company array within node server - grab object id in backend 



OVERVIEW 

*
problem: onLoading and onError UI states are not rendered

*
problem: find more interesting data to display to the user 


*
problem:

*
problem:

*
problem:

*
problem:



DAY 

*
problem: might need to separate useGetWeekDates query into both day and week components 
partially because there are two date variables that are conflicting -- one for selecting weekData 
and one for selecting data for a particular day in Day component

*
problem entry data needs to be pulled from separate API 
pull all entries back a year 
if user selects date prior to 1 year of most recent date within entries data pool 
create new API request

*
problem: is not intuitively linked to week section 

*
problem: requires a tag upon that describes if entry was last input 

*
problem: add date picker - set to current date 
have current date present all shifts worked for that day
allow user to select which shifts' data gets presented to the stats section

*
problem:

*
problem:

*
problem:


WEEK

*
problem: EntryDisplay box needs access to company name

*
problem:a shift preview should provide option to send data to Day statistics view

*
problem: popover display a few more pieces of data and a populate button will send info to single entry stats view

*
problem: week date box requires 'day' text i.g., 'sunday', 'saturday', 'monday'

*
problem: day displayed does not match the weekPairs data. select dates: (9-15) DateBox dates: (8-14)  

*
problem: Week needs to display its data -- wait until full combover of front-end components is acheived
Too many components will get used that I don't fully understand yet

*
problem: shifts are not being placed in the correct days

*
problem: weekpairs in Week component is a poor name. It's not a pair its just a week.

*
problem: Week Shift popover 'view' button needs to populate single entry data


MONTH 

*
problem: Month section does not have a title 



SHIFT

*
problem: shift section needs to be created




/********** BACK END **********/

